version: '3.8'
services:
  # API Gateway
  gateway:
    image: traefik:latest
    ports:
      - "80:80"
      - "8080:8080"
    networks:
      - bute-ai-network
    volumes:
       - ./traefik.yml:/etc/traefik/traefik.yml
       - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.http.routers.swagger.rule=PathPrefix(`/api`) && Path(`/swagger`)"
      - "traefik.http.routers.swagger.middlewares=strip-prefix"
      - "traefik.http.middlewares.strip-prefix.stripprefixregex.regex=/api/(.*)"
      - "traefik.http.middlewares.strip-prefix.stripprefixregex.replacement=/$$1"


  # Core - Service
  core:
    build:
      context: ./bute-ai-core
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.core.rule=PathPrefix(`/api/core`)"
      - "traefik.http.services.core.loadbalancer.server.port=8000"
      - "traefik.http.services.core.loadbalancer.server.scheme=http"
      - "traefik.http.services.core.loadbalancer.sticky=true"
      - "traefik.http.services.core.loadbalancer.sticky.cookie.name=core_cookie"
    networks:
      - bute-ai-network
    

  # Auth - Service
  auth:
    build:
      context: ./bute-ai-auth
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth.rule=PathPrefix(`/api/auth`)"
      - "traefik.http.services.auth.loadbalancer.server.port=8080"
      - "traefik.http.services.auth.loadbalancer.server.scheme=http"
      - "traefik.http.services.auth.loadbalancer.sticky=true"
      - "traefik.http.services.auth.loadbalancer.sticky.cookie.name=auth_cookie"
    networks:
      - bute-ai-network


  # Blob - Service
  blob:
    build:
      context: ./bute-ai-blob
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.blob.rule=PathPrefix(`/api/blob`)"
      - "traefik.http.services.blob.loadbalancer.server.port=8080"
      - "traefik.http.services.blob.loadbalancer.server.scheme=http"
      - "traefik.http.services.blob.loadbalancer.sticky=true"
      - "traefik.http.services.blob.loadbalancer.sticky.cookie.name=blob_cookie"
    networks:
      - bute-ai-network


  # Transfer - Service
  transfer:
    build:
      context: ./bute-ai-transfer
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.transfer.rule=PathPrefix(`/api/transfer`)"
      - "traefik.http.services.transfer.loadbalancer.server.port=8000"
      - "traefik.http.services.transfer.loadbalancer.server.scheme=http"
      - "traefik.http.services.transfer.loadbalancer.sticky=true"
      - "traefik.http.services.transfer.loadbalancer.sticky.cookie.name=transfer_cookie"
    networks:
      - bute-ai-network


  # Transfer - Service
  kyc:
    build:
      context: ./bute-ai-kyc
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.kyc.rule=PathPrefix(`/api/kyc`)"
      - "traefik.http.services.kyc.loadbalancer.server.port=8080"
      - "traefik.http.services.kyc.loadbalancer.server.scheme=http"
      - "traefik.http.services.kyc.loadbalancer.sticky=true"
      - "traefik.http.services.kyc.loadbalancer.sticky.cookie.name=kyc_cookie"
    networks:
      - bute-ai-network


  # Payment - Service
  payment:
    build:
      context: ./bute-ai-payment
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.payment.rule=PathPrefix(`/api/payment`)"
      - "traefik.http.services.payment.loadbalancer.server.port=80"
      - "traefik.http.services.payment.loadbalancer.server.scheme=http"
      - "traefik.http.services.payment.loadbalancer.sticky=true"
      - "traefik.http.services.payment.loadbalancer.sticky.cookie.name=payment_cookie"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - bute-ai-network     


  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3.9.12
    ports:
      - "5672:5672"

  
  # RabbitMQ - Management
  rabbitmq-ui:
    image: rabbitmq:3.9.12-management
    ports:
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    depends_on:
      - rabbitmq


  # Redis
  redis:
    image: redis:latest
    ports:
      - "6379:6379"


  # Redis - Commander
  redis-commander:
    image: rediscommander/redis-commander:latest
    ports:
      - "8081:8081"
    environment:
      REDIS_HOSTS: redis
      REDIS_PORT: 6379


  # Prometheus
  prometheus:
    image: prom/prometheus:v2.28.1
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - bute-ai-network


  # Grafana
  grafana:
    image: grafana/grafana:8.3.0
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin_password
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - bute-ai-network


  # Prometheus Node Exporter
  prometheus-node-exporter:
    image: prom/node-exporter:latest
    ports:
      - "9100:9100"
    networks:
      - bute-ai-network   

volumes:
  gateway-volume:
  grafana-data:
  kafka_data:

networks:
  bute-ai-network:
